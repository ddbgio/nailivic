#!/bin/bash

# set -u

# this kinda sorta tries to do what it is supposed to do
# but it seems to do a poor job of actually stopping and restarting
# maybe lean on existing tools
# https://dev.to/stefanalfbo/live-reloading-in-go-3gdo


WATCH_DIR="."
RUN_CMD="go run ."
REFRESH_INTERVAL=2

start_app() {
    echo "Starting application..."
    $RUN_CMD &
    APP_PID=$!
    echo "Application started with PID $APP_PID"
}

stop_app() {
    if [ -n "$APP_PID" ]; then
        echo "Stopping application with PID $APP_PID..."
        kill $APP_PID
        wait $APP_PID 2>/dev/null
        echo "Application stopped."
    fi
}

# Ensure WATCH_DIR is defined
if [ -z "$WATCH_DIR" ]; then
    echo "WATCH_DIR is not defined."
    exit 1
fi

# Ensure RUN_CMD is defined
if [ -z "$RUN_CMD" ]; then
    echo "RUN_CMD is not defined."
    exit 1
fi

# create initial state file and start
PREV_STATE=$(mktemp)
ls -lR "$WATCH_DIR" > "$PREV_STATE"
start_app

# continue to watch for changes, reload when detected
while true; do
    echo "Checking for changes..."
    CURRENT_STATE=$(mktemp)
    ls -lR "$WATCH_DIR" > "$CURRENT_STATE"
    if ! diff "$PREV_STATE" "$CURRENT_STATE" > /dev/null; then
        echo "ðŸŸ¨ Changes detected, reloading ..."
        stop_app
        sleep 1
        start_app
        mv "$CURRENT_STATE" "$PREV_STATE"
    else
        rm "$CURRENT_STATE"
    fi
    sleep "$REFRESH_INTERVAL"
done